<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on XiaoYu Zhao</title>
    <link>/posts/</link>
    <description>Recent content in Posts on XiaoYu Zhao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 05 Mar 2023 01:25:16 +0800</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GithubActionTest</title>
      <link>/posts/daliy/githubactiontest/</link>
      <pubDate>Sun, 05 Mar 2023 01:25:16 +0800</pubDate>
      
      <guid>/posts/daliy/githubactiontest/</guid>
      <description>测试github action是否配置成功 This is a Test </description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>/posts/my-first-post/</link>
      <pubDate>Thu, 02 Dec 2021 01:26:07 +0800</pubDate>
      
      <guid>/posts/my-first-post/</guid>
      <description>Main Finally completed the construction of the new blog by Hugo.
I will record Algorithm Contest answers using English, also in order to improve My English Skill.
I&amp;rsquo;m a new employer of Shopee SG, software Engineer. Generally, I solve algorithm problems using C++, but I use golang at work.</description>
    </item>
    
    <item>
      <title>当你向一个比特币地址转账，整个过程发生了什么</title>
      <link>/posts/blockchain/biticoin-transfer/</link>
      <pubDate>Thu, 02 Dec 2021 01:26:07 +0800</pubDate>
      
      <guid>/posts/blockchain/biticoin-transfer/</guid>
      <description>当你向一个比特币地址转账，整个过程发生了什么 流程图 创建交易 在你输入目标地址，以及转账金额和矿工费用后。你的比特币钱包会生成一个结构体记录交易的信息。
比特币交易的结构体由以下几个部分组成：
版本号（Version）：交易数据格式的版本。 输入计数（Input Counter）：指明多少个输入被包括在这次交易中。 输入（Inputs）：每一个输入包含以下内容： 交易的引用（Transaction Reference）：这是一个对之前发生的交易的引用，说明了这些比特币的来源。 输出索引（Output Index）：标识在引用的交易中的哪一个输出。这是因为每个比特币交易可以有多个输出。 解锁脚本大小（Unlocking Script Size）：解锁脚本（通常包含签名和公钥）的大小。 解锁脚本（Unlocking Script）：包含用于解锁输入的数据。通常是包含了签名和公钥的脚本。 序列号（Sequence）：目前大部分情况下默认为0xFFFFFFFF，主要用于标示交易的可替代性。 输出计数（Output Counter）：指明多少个输出被包括在这次交易中。 输出（Outputs）：每一个输出包含以下内容： 数额（Value）：要发送的比特币的数量，单位是Satoshi（比特币的最小单位，1比特币=1亿Satoshi）。 锁定脚本大小（Locking Script Size）：锁定脚本（通常包含接收方的公钥哈希）的大小。 锁定脚本（Locking Script）：包含用于锁定输出的数据。通常是包含了接收方的公钥哈希的脚本。 锁定时间（Locktime）：交易何时能被添加到区块链的时间约束。如果设置为0，表示没有约束。 签名交易 你的比特币钱包会使用你的私钥对整个交易进行签名。签名的目的是为了验证这笔交易是由你发起的，并且交易签名后，不可被篡改。签名的目的是保证交易的完整性和防止双花，只有拥有正确的私钥才能创建有效的签名，而其他节点可以用公钥来验证这个签名。
广播交易 当交易信息生成后，比特币钱包会把这笔签名后的交易发送到比特币网络，也就是会向连接的所有其他节点广播这笔交易，其他节点检查交易信息正确后也会继续广播给他们所连接的节点。于是这笔交易就在比特币网络中传播开。
比特币网络使用的是P2P 协议。在比特币网络中，新的节点（包括矿工节点）通常通过以下几种方式连接到其他节点：
固定种子节点（Hardcoded Seed Nodes）: 在比特币软件中，开发者会预先设定一些稳定可靠的节点地址作为种子节点。新的节点在启动时，会尝试连接这些种子节点，然后通过这些种子节点获取更多的节点信息。 DNS种子（DNS Seeds）: 除了预设的固定种子节点，比特币软件也设定了一些DNS种子。这些DNS种子是一些域名，当新的节点向这些域名发送请求时，DNS服务器会返回一些活跃节点的IP地址。 地址广播（Address Broadcasting）: 当一个节点连接到网络中，它会从已经连接的节点处获取更多节点的信息。每个节点都会周期性地广播它知道的其他节点的信息。 手动添加（Manual Addition）: 用户也可以手动添加节点的信息，例如，如果用户知道某个节点是稳定可靠的，他们可以直接把这个节点的信息添加到自己的比特币客户端中。 矿工确认交易 矿工节点在收到一笔交易时，会先放入一个mempool(交易池)。矿工节点会优先取交易费比较高的交易打包到一个新的区块。这个区块包含上一个区块的哈希值，时间戳和其他信息如下
int32_t nVersion; uint256 hashPrevBlock; uint256 hashMerkleRoot; uint32_t nTime; uint32_t nBits; uint32_t nNonce;//初始值为0，不断改变该值来重新进行哈希计算，知道求的目标的哈希值。 POW 证明 工作量证明采取搜索一 个数，使得被哈希时（如使用 SHA-256）得到的哈希值以数个 0 比特开始。平均所需工 作量将随所需 0 比 特呈指数级增长而验证却只需执行一次哈希。</description>
    </item>
    
  </channel>
</rss>
